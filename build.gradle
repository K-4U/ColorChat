buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

// define the properties file
//ext.configFile = file "build.properties"

//configFile.withReader {
    // read config. it shall from now on be referenced as simply config or as project.config
//    def prop = new Properties()
//    prop.load(it)
//    ext.config = new ConfigSlurper().parse prop
//}

apply plugin: 'forge'

version = "1.7.10-0.1.0"
group= "k4unl.minecraft.colorChat" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "colorchat"

minecraft {
    version = "1.7.10-10.13.0.1150"
    assetDir = "../minecraft/assets"
    replace "@VERSION@", project.version
	replace "@BUILDNUM@", System.getenv().BUILD_NUMBER
}

// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src'
                // exclude 'some exclusion'
                // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
                exclude '**/.md' // exclude readme from localization repo
                // exclude 'some exclusion'
                // include 'some inclusion'
        }
    }
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        //include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
